---
- hosts: 127.0.0.1
  connection: local

  vars:
    dev_env_dir: /usr/local/dev-env

  tasks:
    - name: Check Sudo Password
      command: ls
      become: yes
      become_method: sudo
      become_flags: -H -S -n -k
      changed_when: false

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 600
      become: yes

    - name: Install apt https support
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
      become: yes

    - shell: /usr/bin/lsb_release -cs
      register: release_ver
      when: ansible_distribution == 'Debian'

    - set_fact: release_version="{{release_ver}}"
      when: release_ver.changed

    - shell: /usr/bin/lsb_release -cs
      register: release_ver
      when: ansible_distribution == 'Ubuntu'

    - set_fact: release_version="{{release_ver}}"
      when: release_ver.changed

    - name: Install ruby
      apt:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - ruby
          - ruby-bundler
      become: yes

    - name: Install dory
      bundler:
        chdir: "{{ dev_env_dir }}/ansible"
        binstub_directory: /usr/local/bin
        user_install: no
      become: yes

    - name: Install desk
      get_url:
        url: https://raw.githubusercontent.com/outstand/desk/master/desk
        dest: /usr/local/bin/desk
        mode: 0755
      become: yes

    - name: Install zsh
      apt:
        name: zsh
        state: latest
      become: yes

    - name: Install git-lfs
      apt:
        name: git-lfs
        state: latest
      become: yes

    - name: Update Homebrew
      homebrew:
        update_homebrew: yes

    - name: Install Homebrew Packages
      homebrew:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - mutagen-io/mutagen/mutagen-beta

    - name: Install dory preferences
      copy:
        src: "{{ dev_env_dir }}/docker/dory.yml"
        dest: ~/.dory.yml

    - stat:
        path: /etc/NetworkManager/NetworkManager.conf
      register: network_manager_conf

    - name: Disable NetworkManager dnsmasq
      replace:
        path: /etc/NetworkManager/NetworkManager.conf
        regexp: "^dns=dnsmasq"
        replace: "#dns=dnsmasq"
      become: yes
      register: network_manager_replace
      when: network_manager_conf.stat.exists == True

    - name: Restart NetworkManager
      systemd:
        daemon_reload: yes
        state: restarted
        name: NetworkManager
      become: yes
      when: network_manager_conf.stat.exists == True and network_manager_replace.changed == True

    - name: Add dash to .zshrc
      lineinfile:
        dest: ~/.zshrc
        line: "source {{ dev_env_dir }}/ansible/dash_profile"
        create: yes
      when: ansible_env.SHELL == "/bin/zsh" or ansible_env.SHELL == "/usr/local/bin/zsh"

    - name: Add dash to .bashrc
      lineinfile:
        dest: "{{ item }}"
        line: "source {{ dev_env_dir }}/ansible/dash_profile"
        create: yes
      loop:
        - ~/.bash_profile
        - ~/.bashrc
      when: ansible_env.SHELL == "/bin/bash"

    - name: Add desk to .zshrc
      lineinfile:
        dest: ~/.zshrc
        line: '[ -n "$DESK_ENV" ] && source "$DESK_ENV" || true'
        create: yes
      when: ansible_env.SHELL == "/bin/zsh" or ansible_env.SHELL == "/usr/local/bin/zsh"

    - name: Add desk to .bashrc
      lineinfile:
        dest: "{{ item }}"
        line: '[ -n "$DESK_ENV" ] && source "$DESK_ENV" || true'
        create: yes
      loop:
        - ~/.bash_profile
        - ~/.bashrc
      when: ansible_env.SHELL == "/bin/bash"

    - name: Ensure ~/.irb_history exists
      copy:
        content: ''
        dest: ~/.irb_history
        force: no
